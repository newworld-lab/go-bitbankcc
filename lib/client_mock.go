// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/ito_kotei/workspace/src/github.com/newworld-lab/go-bitbankcc/lib/client.go

// Package lib is a generated GoMock package.
package lib

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockclient is a mock of client interface
type Mockclient struct {
	ctrl     *gomock.Controller
	recorder *MockclientMockRecorder
}

// MockclientMockRecorder is the mock recorder for Mockclient
type MockclientMockRecorder struct {
	mock *Mockclient
}

// NewMockclient creates a new mock instance
func NewMockclient(ctrl *gomock.Controller) *Mockclient {
	mock := &Mockclient{ctrl: ctrl}
	mock.recorder = &MockclientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockclient) EXPECT() *MockclientMockRecorder {
	return m.recorder
}

// request mocks base method
func (m *Mockclient) request(option *clientOption) ([]byte, error) {
	ret := m.ctrl.Call(m, "request", option)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// request indicates an expected call of request
func (mr *MockclientMockRecorder) request(option interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "request", reflect.TypeOf((*Mockclient)(nil).request), option)
}
